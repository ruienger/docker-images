# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the "master" branch or tagged branch
  pull_request:
    branches: [ "master" ]
    tags: [ "v*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get tag to build
        id: tag
        run: |
          if [[ -z "${{ github.event.inputs.tag }}" ]]; then
            echo "Use the tag: latest"
            echo ::set-output name=tag::lastest
          else
            echo "Use tag: ${{ github.event.inputs.tag }}"
            echo ::set-output name=tag::${{ github.event.inputs.tag }}
          fi
        
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/v2ray-ws:${{ steps.tag.outputs.tag }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/v2ray-ws:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/v2ray-ws:buildcache,mode=max
